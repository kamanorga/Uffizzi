name: Deploy to Uffizzi

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy with Uffizzi CLI
        run: |
          curl -L https://github.com/UffizziCloud/uffizzi_cli/releases/latest/download/uffizzi-linux -o uffizzi
          chmod +x uffizzi
          sudo mv uffizzi /usr/local/bin/
          uffizzi version
          
          export UFFIZZI_SERVER=https://app.uffizzi.com
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          
          echo "Logging in to Uffizzi..."
          uffizzi login --server https://app.uffizzi.com || echo "Login failed, continuing..."
          
          echo "Docker Compose file content:"
          cat docker-compose.uffizzi.yml
          
          PREVIEW_NAME="pr-${{ github.event.number || 'manual' }}"
          echo "Creating preview: $PREVIEW_NAME"
          
          if uffizzi preview create docker-compose.uffizzi.yml --name "$PREVIEW_NAME"; then
            echo "DEPLOYMENT_STATUS=success" >> $GITHUB_ENV
            echo "PREVIEW_NAME=$PREVIEW_NAME" >> $GITHUB_ENV
          else
            echo "DEPLOYMENT_STATUS=failed" >> $GITHUB_ENV
          fi

      - name: Comment on PR Success
        if: env.DEPLOYMENT_STATUS == 'success' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const previewName = process.env.PREVIEW_NAME;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Uffizzi Preview Environment Created!**\n\n**Preview Name:** \`${previewName}\`\n**Image:** \`ghcr.io/kamanorga/uffizzi:latest\`\n**Port:** 8080 ‚Üí 80\n\nüìä **Check your deployment:**\n- Visit [Uffizzi Dashboard](https://app.uffizzi.com/)\n- Look for project "redash" or the preview named \`${previewName}\`\n\n‚è∞ *This preview will be automatically deleted when the PR is closed.*`
            });

      - name: Comment on PR Failed
        if: env.DEPLOYMENT_STATUS == 'failed' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ùå **Uffizzi Preview Environment Deployment Failed**\n\n**Possible issues:**\n- Image \`ghcr.io/kamanorga/uffizzi:latest\` might not be accessible\n- Docker Compose configuration issues\n- Uffizzi service temporarily unavailable\n\n**Next steps:**\n1. Check the Actions logs for detailed error messages\n2. Verify your image is publicly accessible\n3. Try manual deployment in [Uffizzi Dashboard](https://app.uffizzi.com/)`
            });

  delete:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Preview Environment
        run: |
          curl -L https://github.com/UffizziCloud/uffizzi_cli/releases/latest/download/uffizzi-linux -o uffizzi
          chmod +x uffizzi
          sudo mv uffizzi /usr/local/bin/
          
          export UFFIZZI_SERVER=https://app.uffizzi.com
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          
          uffizzi login --server https://app.uffizzi.com || echo "Login failed"
          
          PREVIEW_NAME="pr-${{ github.event.number }}"
          echo "Deleting preview: $PREVIEW_NAME"
          uffizzi preview delete "$PREVIEW_NAME" || echo "Delete failed or preview not found"
